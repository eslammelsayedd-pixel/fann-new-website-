import { GoogleGenAI, Type } from "@google/genai";

const siteRoutes = [
    { path: '/', topic: 'FANN Homepage: Premier Exhibition, Events & Interior Design in Dubai' },
    { path: '/services', topic: 'FANN Services Page: Details on exhibition, event, and interior design services' },
    { path: '/portfolio', topic: 'FANN Portfolio Page: Showcasing completed projects in exhibitions, events, and interiors' },
    { path: '/fann-studio', topic: 'FANN Studio Landing Page: Introduction to the AI-powered design configuration tools' },
    { path: '/fann-studio/exhibition', topic: 'FANN Exhibition Studio: AI tool for generating 3D exhibition stand concepts' },
    { path: '/fann-studio/event', topic: 'FANN Event Studio: AI tool for creating event mood boards and concepts' },
    { path: '/fann-studio/interior', topic: 'FANN Interior Design Studio: AI tool for visualizing commercial and residential interiors' },
    { path: '/events-calendar', topic: 'UAE & KSA Events Calendar: A list of major upcoming trade shows and exhibitions' },
    { path: '/about', topic: 'About FANN Page: Company story, mission, and team information' },
    { path: '/contact', topic: 'Contact FANN Page: Contact information, address, and inquiry form' },
    { path: '/insights', topic: 'FANN Intelligence Hub: AI-generated articles on industry trends' },
];

export default async function handler(req: any, res: any) {
    if (req.method !== 'GET') {
        return res.status(405).json({ error: 'Method Not Allowed' });
    }

    try {
        const apiKey = process.env.API_KEY || process.env.GOOGLE_CLOUD_API_KEY;
        if (!apiKey) {
            throw new Error("API key is not configured on the server.");
        }
        const ai = new GoogleGenAI({ apiKey });

        const seoPromises = siteRoutes.map(route => {
            const prompt = `You are an expert SEO specialist for a luxury design agency in Dubai called FANN. For the following web page, generate an optimal SEO title, meta description, and a comprehensive JSON-LD Schema.org object.

**Page Topic:** ${route.topic}
**Website:** fann.ae
**Target Audience:** High-level marketing executives, event planners, and business owners in the UAE and Saudi Arabia.
**Keywords:** exhibition stands Dubai, event management UAE, interior design, GITEX, Arab Health, luxury events.

**Instructions:**
1.  **Title:** Craft a compelling, keyword-rich title under 60 characters.
2.  **Description:** Write an engaging meta description under 160 characters that encourages clicks.
3.  **Schema:** Create a detailed JSON-LD schema. Use the most specific type (e.g., 'WebPage', 'Service', 'ContactPage', 'CollectionPage'). For the main pages, reference the parent 'Organization' schema for FANN.

Your response MUST be a single, valid JSON object containing three keys: "title", "description", and "schema". Do not include any text or markdown formatting outside of the JSON structure.`;
            
            return ai.models.generateContent({
                model: "gemini-2.5-flash",
                contents: prompt,
                config: {
                    responseMimeType: "application/json",
                    responseSchema: {
                        type: Type.OBJECT,
                        properties: {
                            title: { type: Type.STRING },
                            description: { type: Type.STRING },
                            schema: {
                                type: Type.OBJECT,
                                description: 'A valid JSON-LD Schema.org object.'
                            }
                        },
                        required: ['title', 'description', 'schema']
                    }
                }
            }).then(response => ({
                path: route.path,
                data: JSON.parse(response.text.trim())
            }));
        });

        const results = await Promise.all(seoPromises);

        const seoDataMap = results.reduce((acc, { path, data }) => {
            acc[path] = data;
            return acc;
        }, {} as Record<string, any>);
        
        // Format the output as a TypeScript file content string
        const seoDataString = `/* eslint-disable */
// THIS FILE IS AUTO-GENERATED BY THE FANN AI SEO AGENT. DO NOT EDIT MANUALLY.
// Run the agent in the FANN Studio to regenerate this file.

interface SEOData {
  title: string;
  description: string;
  schema: object;
}

export const seoMetadata: Record<string, SEOData> = ${JSON.stringify(seoDataMap, null, 2)};
`;

        res.status(200).json({ seoData: seoDataString });

    } catch (error: any) {
        console.error('Error in AI SEO Agent:', error);
        res.status(500).json({ error: error.message || 'An internal server error occurred.' });
    }
}
